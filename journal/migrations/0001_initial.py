# Generated by Django 5.0.6 on 2024-07-08 09:56

import django.core.validators
import django.db.models.deletion
import journal.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_name", models.CharField(max_length=100)),
                (
                    "account_balance",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "account_r",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "daily_profit_target_r",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "daily_loss_limit_r",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("daily_operation_limit", models.IntegerField(blank=True, null=True)),
                ("profit_streak_limit", models.IntegerField(blank=True, null=True)),
                ("loss_streak_limit", models.IntegerField(blank=True, null=True)),
                (
                    "operation_profit_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "operation_loss_limit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "favorites_tickers",
                    journal.models.SQLiteJSONField(blank=True, null=True),
                ),
                (
                    "favorites_timeframes",
                    journal.models.SQLiteJSONField(blank=True, null=True),
                ),
                (
                    "favorites_strategies",
                    journal.models.SQLiteJSONField(blank=True, null=True),
                ),
                (
                    "loss_profit_calculated_balance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=30, null=True)),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("ticker", models.CharField(max_length=10)),
                (
                    "entry_price",
                    models.DecimalField(
                        decimal_places=5,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stop_price",
                    models.DecimalField(
                        decimal_places=5,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "tp_price",
                    models.DecimalField(
                        decimal_places=5,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "trade_type",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=4
                    ),
                ),
                (
                    "commission",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("timeframe", models.CharField(blank=True, max_length=10, null=True)),
                ("trend", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "risk_r",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("chart", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="trade_images/"),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "emotions_before",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emotions_during",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emotions_after",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "trade_result",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("visibility", models.CharField(blank=True, max_length=255, null=True)),
                ("session", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("open_date", models.DateTimeField(auto_now_add=True)),
                ("close_date", models.DateTimeField(blank=True, null=True)),
                ("createdAt", models.DateTimeField(auto_now_add=True)),
                ("updatedAt", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="journal.account",
                    ),
                ),
                (
                    "trade_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
